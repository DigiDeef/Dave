name: CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current date
        id: get-date
        run: echo "date=$(date -u +'%Y%m%d')" >> $GITHUB_OUTPUT

      # Install Python 3.10 manually so it is actually used by buildozer
      - name: Install Python 3.10
        run: |
          sudo apt update
          sudo apt install -y python3.10 python3.10-dev python3.10-distutils
          sudo apt install -y python3-pip
          python3.10 -m pip install --upgrade pip
          sudo ln -sf /usr/bin/python3.10 /usr/local/bin/python
          sudo ln -sf /usr/bin/python3.10 /usr/bin/python

      # Verify Python version
      - name: Check Python version
        run: python --version

      # Clear any old buildozer cache
      - name: Clear old caches
        run: |
          rm -rf $HOME/.cache/pip
          rm -rf $HOME/.buildozer
          rm -rf .buildozer_global

      # Cache Buildozer global directory
      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-global-

      # Cache Buildozer working directory
      - name: Cache Buildozer working directory
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-

      # Install Buildozer and system dependencies
      - name: Install Buildozer and dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libssl-dev libffi-dev \
              python3.10-dev libsqlite3-dev zlib1g-dev \
              libncurses5 libncurses5-dev libreadline-dev libgdbm-dev \
              libbz2-dev liblzma-dev openjdk-11-jdk unzip git wget

          python3.10 -m pip install cython
          python3.10 -m pip install buildozer

      # Set up Android SDK and accept licenses
      - name: Install Android SDK
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          unzip sdk-tools.zip
          mv cmdline-tools latest
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "platforms;android-30" "build-tools;30.0.3"

      # Build APK
      - name: Build APK with Buildozer
        run: |
          export ANDROIDSDK=$HOME/android-sdk
          export PATH=$ANDROIDSDK/platform-tools:$ANDROIDSDK/cmdline-tools/latest/bin:$PATH
          buildozer android debug

      # Upload APK
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: bin/*.apk
